# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libsignal_client_darwin_arm64.node
### Rules for action "build_node_bridge.py":
quiet_cmd_binding_gyp_libsignal_client_darwin_arm64_node_target_build_node_bridge_py = ACTION binding_gyp_libsignal_client_darwin_arm64_node_target_build_node_bridge_py $@
cmd_binding_gyp_libsignal_client_darwin_arm64_node_target_build_node_bridge_py = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p $(builddir); python3 build_node_bridge.py --out-dir "$(builddir)/" "--os-name=darwin" "--configuration=$(BUILDTYPE)" --cargo-build-dir "$(obj).$(TOOLSET)/libsignal_client_darwin_arm64.node/geni/rust" "--cargo-target=aarch64-apple-darwin" "--node-arch=arm64"

$(builddir)/libsignal_client_darwin_arm64.node: obj := $(abs_obj)
$(builddir)/libsignal_client_darwin_arm64.node: builddir := $(abs_builddir)
$(builddir)/libsignal_client_darwin_arm64.node: export BUILT_FRAMEWORKS_DIR := ${abs_builddir}
$(builddir)/libsignal_client_darwin_arm64.node: export BUILT_PRODUCTS_DIR := ${abs_builddir}
$(builddir)/libsignal_client_darwin_arm64.node: export CONFIGURATION := ${BUILDTYPE}
$(builddir)/libsignal_client_darwin_arm64.node: export PRODUCT_NAME := libsignal_client_darwin_arm64.node
$(builddir)/libsignal_client_darwin_arm64.node: export SDKROOT := /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
$(builddir)/libsignal_client_darwin_arm64.node: export SRCROOT := ${abs_srcdir}/
$(builddir)/libsignal_client_darwin_arm64.node: export SOURCE_ROOT := ${SRCROOT}
$(builddir)/libsignal_client_darwin_arm64.node: export TARGET_BUILD_DIR := ${abs_builddir}
$(builddir)/libsignal_client_darwin_arm64.node: export TEMP_DIR := ${TMPDIR}
$(builddir)/libsignal_client_darwin_arm64.node: export XCODE_VERSION_ACTUAL := 1500
$(builddir)/libsignal_client_darwin_arm64.node: TOOLSET := $(TOOLSET)
$(builddir)/libsignal_client_darwin_arm64.node $(builddir)/nonexistent-file-to-force-rebuild: fda706891f0282f12a96ce78632333b3a64fc936.intermediate
	@:
.INTERMEDIATE: fda706891f0282f12a96ce78632333b3a64fc936.intermediate
fda706891f0282f12a96ce78632333b3a64fc936.intermediate:  FORCE_DO_CMD
	$(call do_cmd,touch)
	$(call do_cmd,binding_gyp_libsignal_client_darwin_arm64_node_target_build_node_bridge_py)

all_deps += $(builddir)/libsignal_client_darwin_arm64.node $(builddir)/nonexistent-file-to-force-rebuild
action_binding_gyp_libsignal_client_darwin_arm64_node_target_build_node_bridge_py_outputs := $(builddir)/libsignal_client_darwin_arm64.node $(builddir)/nonexistent-file-to-force-rebuild


### Rules for final target.
# Build our special outputs first.
$(obj).target/libsignal_client_darwin_arm64.node.stamp: | $(action_binding_gyp_libsignal_client_darwin_arm64_node_target_build_node_bridge_py_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_libsignal_client_darwin_arm64_node_target_build_node_bridge_py_outputs): | 

$(obj).target/libsignal_client_darwin_arm64.node.stamp: TOOLSET := $(TOOLSET)
$(obj).target/libsignal_client_darwin_arm64.node.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/libsignal_client_darwin_arm64.node.stamp
# Add target alias
.PHONY: libsignal_client_darwin_arm64.node
libsignal_client_darwin_arm64.node: $(obj).target/libsignal_client_darwin_arm64.node.stamp

# Add target alias to "all" target.
.PHONY: all
all: libsignal_client_darwin_arm64.node

